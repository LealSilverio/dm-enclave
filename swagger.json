{
  "swagger": "2.0",
  "info": {
    "title": "DM Enclave",
    "description": "Do the D&D stuff",
    "version": "0.0.1"
  },
  "host": "dm-enclave.onrender.com",
  "tags": [
    {
      "name": "character",
      "description": "Character sheets. Can be of type player or NPC Belongs to a player or a campaign(if sheet is for NPC)"
    },
    {
      "name": "campaign",
      "description": "Campaigns own players or characters(for NPCs) and belong to DMs."
    },
    {
      "name": "encounter",
      "description": "Encounters belong to campaigns. NPC characters or players belong to encounters."
    },
    {
      "name": "user",
      "description": "Can be of type player or DM, players own sheets and belong to campaigns, DMs own campaigns."
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/character": {
      "get": {
        "tags": [
          "character"
        ],
        "summary": "Search for all characters",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "class",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of matching character records",
            "schema": {
              "$ref": "#/definitions/CharacterList"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      },
      "post": {
        "tags": [
          "character"
        ],
        "summary": "Create a new character record.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Character"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The created character record",
            "schema": {
              "$ref": "#/definitions/Character"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      },
      "put": {
        "tags": [
          "character"
        ],
        "summary": "Update a character record.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Character"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated character record",
            "schema": {
              "$ref": "#/definitions/Character"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/character/search": {
      "get": {
        "tags": [
          "character"
        ],
        "summary": "Search for a character by name, class, or id",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "class",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of matching character records",
            "schema": {
              "$ref": "#/definitions/CharacterList"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/character/{characterId}": {
      "get": {
        "tags": [
          "character"
        ],
        "summary": "Get a character record by id.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Character record identified by id",
            "schema": {
              "$ref": "#/definitions/Character"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      },
      "put": {
        "tags": [
          "character"
        ],
        "summary": "Update a character record by id.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Character"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The modified character record",
            "schema": {
              "$ref": "#/definitions/Character"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "character"
        ],
        "summary": "Delete a character record by id.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The record that was deleted",
            "schema": {
              "$ref": "#/definitions/Character"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/campaign/": {
      "get": {
        "tags": [
          "campaign"
        ],
        "summary": "Search for a campaign record.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of campaign records",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      },
      "post": {
        "tags": [
          "campaign"
        ],
        "summary": "Create a campaign record.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The record that was created",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/campaign/{campaignId}": {
      "get": {
        "tags": [
          "campaign"
        ],
        "summary": "Get a campaign record by id.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign record identified by id",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "campaign"
        ],
        "summary": "Delete a campaign record by id.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The record that was deleted",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/encounter/": {
      "get": {
        "tags": [
          "encounter"
        ],
        "summary": "Search for an Encounter record.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Encounter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Encounter records",
            "schema": {
              "$ref": "#/definitions/Encounter"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      },
      "post": {
        "tags": [
          "encounter"
        ],
        "summary": "Create an Encounter record.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Encounter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The record that was created",
            "schema": {
              "$ref": "#/definitions/Encounter"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/encounter/search": {
      "get": {
        "tags": [
          "encounter"
        ],
        "summary": "Search for an Encounter by name or id",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of matching Encounter records",
            "schema": {
              "$ref": "#/definitions/EncounterList"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/encounter/{encounterId}": {
      "get": {
        "tags": [
          "encounter"
        ],
        "summary": "Get an Encounter record by id.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "encounterId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Encounter record identified by id",
            "schema": {
              "$ref": "#/definitions/Encounter"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "encounter"
        ],
        "summary": "Delete an encounter record by id.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "encounterId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The record that was deleted",
            "schema": {
              "$ref": "#/definitions/Encounter"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    }
  },
  "definitions": {
    "Character": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "class": {
          "type": "string"
        },
        "armorClass": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string",
          "enum": [
            "player",
            "npc"
          ]
        }
      }
    },
    "CharacterList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Character"
      }
    },
    "Campaign": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "CampaignList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Campaign"
      }
    },
    "Encounter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "EncounterList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Encounter"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "UserList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    }
  }
}
